behaviors {
        hml: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HRML";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <125>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_R THUMBS>;
            hold-trigger-on-release;
        };
        hmr: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HRMR";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <125>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_L THUMBS>;
            hold-trigger-on-release;
        };
        hmr_lpar_lt: hmr_lpar_lt {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR_LPAR";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <125>;
            flavor = "balanced";
            bindings = <&kp>, <&lpar_lt>;
            hold-trigger-key-positions = <KEYS_L THUMBS>;
            hold-trigger-on-release;
        };
        hmr_rpar_gt: hmr_rpar_gt {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR_RPAR";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <125>;
            flavor = "balanced";
            bindings = <&kp>, <&rpar_gt>;
            hold-trigger-key-positions = <KEYS_L THUMBS>;
            hold-trigger-on-release;
        };
        eur_dol: euro_dollar {
            compatible = "zmk,behavior-hold-tap";
            label = "Euro / Dollar";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <125>;
            global-quick-tap;
            flavor = "tap-preferred";
            bindings =
                <&euro_sign>,
                <&kp>;
        };
        ltsl: layerTapSL {
            compatible = "zmk,behavior-hold-tap";
            label = "Layer toggle / sticky layer";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            flavor = "tap-preferred";
            bindings =
                <&mo>,
                <&sl>;
        };
        htsk: htsk {
            compatible = "zmk,behavior-hold-tap";
            label = "Hold-Tap with Sticky Key";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            flavor = "tap-preferred";
            bindings =
                <&kp>,
                <&sk>;
        };

        // Alt+Tab swapper
        swapper: swapper {
            compatible = "zmk,behavior-tri-state";
            label = "tri_state";
            #binding-cells = <0>;
            bindings = <&kt LALT>, <&kp TAB>, <&kt LALT>;
            ignored-key-positions = <LT1>;
        };
        swapper_r: swapper_r {
            compatible = "zmk,behavior-tri-state";
            label = "tri_state";
            #binding-cells = <0>;
            bindings = <&kt LALT>, <&kp TAB>, <&kt LALT>;
            ignored-key-positions = <LT0>;
        };



        // Umlaut and special symbol Mod-Morph behaviors

        // tap: left-parenthesis | shft + tap: less-than
        lpar_lt: lpar_lt {
                compatible = "zmk,behavior-mod-morph";
                label = "lpar_lt";
                #binding-cells = <0>;
                bindings = <&kp LPAR>, <&kp LT>;
                mods = <(MOD_LSFT|MOD_RSFT)>;
        };   
        // tap: right-parenthesis | shft + tap: greater-than     
        rpar_gt: rpar_gt {
                compatible = "zmk,behavior-mod-morph";
                label = "rpar_lt";
                #binding-cells = <0>;
                bindings = <&kp RPAR>, <&kp GT>;
                mods = <(MOD_LSFT|MOD_RSFT)>;
        };        
        
        // Umlaute klein/gro√ü
        de_ae: de_ae {
                compatible = "zmk,behavior-mod-morph";
                label = "de_ae";
                #binding-cells = <0>;
                bindings = <&mak_ae>, <&mak_ae_G>;
                mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        de_oe: de_oe {
                compatible = "zmk,behavior-mod-morph";
                label = "de_oe";
                #binding-cells = <0>;
                bindings = <&mak_oe>, <&mak_oe_G>;
                mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        de_ue: de_ue {
                compatible = "zmk,behavior-mod-morph";
                label = "de_ue";
                #binding-cells = <0>;
                bindings = <&mak_ue>, <&mak_ue_G>;
                mods = <(MOD_LSFT|MOD_RSFT)>;
        };
         de_ae_l: de_ae_l {
                compatible = "zmk,behavior-mod-morph";
                label = "de_ae_l";
                #binding-cells = <0>;
                bindings = <&mak_ae_l>, <&mak_ae_G_l>;
                mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        de_oe_l: de_oe_l {
                compatible = "zmk,behavior-mod-morph";
                label = "de_oe_l";
                #binding-cells = <0>;
                bindings = <&mak_oe_l>, <&mak_oe_G_l>;
                mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        de_ue_l: de_ue_l {
                compatible = "zmk,behavior-mod-morph";
                label = "de_ue_l";
                #binding-cells = <0>;
                bindings = <&mak_ue_l>, <&mak_ue_G_l>;
                mods = <(MOD_LSFT|MOD_RSFT)>;
        };


        // Spanish/Portuguese symbols small/capital
        es_n: es_n {
                compatible = "zmk,behavior-mod-morph";
                label = "es_n";
                #binding-cells = <0>;
                bindings = <&mak_es_n>, <&mak_es_n_G>;
                mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        cedi: cedi {
                compatible = "zmk,behavior-mod-morph";
                label = "cedi";
                #binding-cells = <0>;
                bindings = <&mak_cedi>, <&mak_cedi_G>;
                mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        a_gr: a_gr {
                compatible = "zmk,behavior-mod-morph";
                label = "a_gr";
                #binding-cells = <0>;
                bindings = <&mak_a_gr>, <&mak_a_gr_G>;
                mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        a_acu: a_acu {
                compatible = "zmk,behavior-mod-morph";
                label = "a_acu";
                #binding-cells = <0>;
                bindings = <&mak_a_acu>, <&mak_a_acu_G>;
                mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        a_circ: a_circ {
                compatible = "zmk,behavior-mod-morph";
                label = "a_circ";
                #binding-cells = <0>;
                bindings = <&mak_a_circ>, <&mak_a_circ_G>;
                mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        a_tild: a_tild {
                compatible = "zmk,behavior-mod-morph";
                label = "a_tild";
                #binding-cells = <0>;
                bindings = <&mak_a_tild>, <&mak_a_tild_G>;
                mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        e_gr: e_gr {
            compatible = "zmk,behavior-mod-morph";
            label = "e_gr";
            #binding-cells = <0>;
            bindings = <&mak_e_gr>, <&mak_e_gr_G>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        e_acu: e_acu {
            compatible = "zmk,behavior-mod-morph";
            label = "e_acu";
            #binding-cells = <0>;
            bindings = <&mak_e_acu>, <&mak_e_acu_G>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        e_circ: e_circ {
            compatible = "zmk,behavior-mod-morph";
            label = "e_circ";
            #binding-cells = <0>;
            bindings = <&mak_e_circ>, <&mak_e_circ_G>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        i_gr: i_gr {
            compatible = "zmk,behavior-mod-morph";
            label = "i_gr";
            #binding-cells = <0>;
            bindings = <&mak_i_gr>, <&mak_i_gr_G>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        i_acu: i_acu {
            compatible = "zmk,behavior-mod-morph";
            label = "i_acu";
            #binding-cells = <0>;
            bindings = <&mak_i_acu>, <&mak_i_acu_G>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        i_circ: i_circ {
            compatible = "zmk,behavior-mod-morph";
            label = "i_circ";
            #binding-cells = <0>;
            bindings = <&mak_i_circ>, <&mak_i_circ_G>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        o_gr: o_gr {
            compatible = "zmk,behavior-mod-morph";
            label = "o_gr";
            #binding-cells = <0>;
            bindings = <&mak_o_gr>, <&mak_o_gr_G>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        o_acu: o_acu {
            compatible = "zmk,behavior-mod-morph";
            label = "o_acu";
            #binding-cells = <0>;
            bindings = <&mak_o_acu>, <&mak_o_acu_G>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        o_circ: o_circ {
            compatible = "zmk,behavior-mod-morph";
            label = "o_circ";
            #binding-cells = <0>;
            bindings = <&mak_o_circ>, <&mak_o_circ_G>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        u_gr: u_gr {
            compatible = "zmk,behavior-mod-morph";
            label = "u_gr";
            #binding-cells = <0>;
            bindings = <&mak_u_gr>, <&mak_u_gr_G>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        u_acu: u_acu {
            compatible = "zmk,behavior-mod-morph";
            label = "u_acu";
            #binding-cells = <0>;
            bindings = <&mak_u_acu>, <&mak_u_acu_G>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        u_circ: u_circ {
            compatible = "zmk,behavior-mod-morph";
            label = "u_circ";
            #binding-cells = <0>;
            bindings = <&mak_u_circ>, <&mak_u_circ_G>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };