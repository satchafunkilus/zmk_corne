/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include "../zmk-nodefree-config/helper.h"
#include "../zmk-nodefree-config/international_chars/german.dtsi"



/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings =
                <&kp>,
                <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
  &kp TAB        &kp Q       &kp W        &kp F             &kp P      &kp B      &kp J            &kp L      &kp U    &kp Y  &kp SEMICOLON  &kp BSPC
&kp LCTRL  &mt LALT A  &hm LALT R  &hm LCTRL S  &hm LEFT_SHIFT T     &kp G      &kp M            &kp N      &kp E    &kp I          &kp O   &kp SQT
&kp LSHFT        &kp Z       &kp X        &kp C             &kp D      &kp V      &kp K            &kp H  &kp COMMA  &kp DOT       &kp FSLH   &kp ESC
                                          &none         &lt 1 TAB  &kp SPACE    &kp RET  &lt 2 BACKSPACE      &none
            >;

//            sensor-bindings = <&inc_dec_kp undefined>;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
  &kp TAB  &kp N1  &kp N2  &kp N3  &kp N4     &kp N5      &kp N6     &kp N7     &kp N8     &kp N9  &kp N0  &kp BSPC
   &trans  &trans  &trans  &trans  &trans     &trans    &kp LEFT   &kp DOWN     &kp UP  &kp RIGHT  &trans    &trans
&kp LSHFT  &trans  &trans  &trans  &trans     &trans    &kp HOME  &kp PG_DN  &kp PG_UP    &kp END  &trans    &trans
                            &none  &trans  &kp SPACE     &kp RET     &trans   &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
  &kp TAB  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET   &kp AMPS  &kp KP_MULTIPLY  &kp LPAR  &kp RPAR   &kp BSPC
&kp LCTRL    &trans  &trans    &trans    &trans     &trans    &kp MINUS  &kp EQUAL         &kp LBKT  &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT    &trans  &trans    &trans    &trans     &trans    &kp UNDER   &kp PLUS         &kp LBRC  &kp RBRC  &kp PIPE  &kp TILDE
                             &kp LGUI    &trans  &kp SPACE      &kp RET     &trans         &kp RALT
            >;
        };

        media_BT {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&bt BT_SEL 2  &bt BT_SEL 3  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&bt BT_SEL 4    &bt BT_CLR  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                                    &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
