/*
 * Copyright (c) 2020 The ZMK Contributo
 *
 * SPDX-License-Identifier: MIT
 */
//#define HOST_OS 2

#include <behaviors.dtsi>
#include "../zmk-nodefree-config/helper.h"

//#include "../zmk-nodefree-config/international_chars/german_alt.dtsi"
#include "../zmk-nodefree-config/international_chars/german.dtsi"


#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

// Layer names

#define BASE    0
#define QWE     1
#define NAV     2
#define SYM     3
#define NUM     4
#define FUN     5
#define UML     6


// Umlaut as Mod-Tap

#define AUML &de_ae
#define OUML &de_oe
#define UUML &de_ue
#define DESZ &de_eszett
#define EUR  &euro_sign
#define FOPT &ppt_fp

#define ___     &none
#define oooo    &trans

#include "makros.dtsi"

&lt {
    tapping-term-ms = <200>;
    quick-tap-ms = <200>;
};

&sk {
    release-after-ms = <2000>;
    quick-release;
};

/ {
    macros {
        ppt_fp: ppt_fp {
            label = "PPT format painter";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LALT &kp H &kp F &kp P>;
        };
        wink: wink {
            label = "^^";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp CARET &kp CARET>;
        };
    };

    behaviors {
        hml: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HRML";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <125>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_R THUMBS>;
            hold-trigger-on-release;
        };
        hmr: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HRMR";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <125>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_L THUMBS>;
            hold-trigger-on-release;
        };
        hmr_lpar_lt: hmr_lpar_lt {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR_LPAR";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <125>;
            flavor = "balanced";
            bindings = <&kp>, <&lpar_lt>;
            hold-trigger-key-positions = <KEYS_L THUMBS>;
            hold-trigger-on-release;
        };
        hmr_rpar_gt: hmr_rpar_gt {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR_RPAR";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <125>;
            flavor = "balanced";
            bindings = <&kp>, <&rpar_gt>;
            hold-trigger-key-positions = <KEYS_L THUMBS>;
            hold-trigger-on-release;
        };
        eur_dol: euro_dollar {
            compatible = "zmk,behavior-hold-tap";
            label = "Euro / Dollar";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <125>;
            global-quick-tap;
            flavor = "tap-preferred";
            bindings =
                <&euro_sign>,
                <&kp>;
        };
        ltsl: layerTapSL {
            compatible = "zmk,behavior-hold-tap";
            label = "Layer toggle / sticky layer";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            flavor = "tap-preferred";
            bindings =
                <&mo>,
                <&sl>;
        };
        htsk: htsk {
            compatible = "zmk,behavior-hold-tap";
            label = "Hold-Tap with Sticky Key";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            flavor = "tap-preferred";
            bindings =
                <&kp>,
                <&sk>;
        };
    };

    combos {
        compatible = "zmk,combos";

        tog_qwertz {
            bindings = <&tog 1>;
            key-positions = <LT4 RT4>;
            layers = <0 1>;
        };

        tog_num {
            bindings = <&tog 4>;
            key-positions = <RH1 RH2>;
            layers = <0 4 1>;
        };

        caps_word_combo {
            bindings = <&caps_word>;
            key-positions = <LH0 RH0>;
            layers = <0 1>;
        };

        escape {
            bindings = <&mt LG(LA(K)) ESC>;
            key-positions = <LT3 LT4>;
            layers = <0 1 4>;
        };
        cut {
            bindings = <&kp LC(X)>;
            key-positions = <LB3 LB2>;
            layers = <0 1>;
        };
        copy {
            bindings = <&kp LC(C)>;
            key-positions = <LB2 LB1>;
            layers = <0 1>;
        };
        paste {
            bindings = <&kp LC(V)>;
            key-positions = <LB1 LB0>;
            layers = <0 1>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
            //╭──────────────┬──────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ 
            &mt LG(LA(K)) ESC   &kp Q          &kp W        &kp F          &kp P         &kp B              &kp J       &kp L         &kp U         &kp Y        &kp SEMICOLON   &kp BSPC
            //├──────────────┼──────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                &kp TAB         &hml RGUI A    &hml LALT R  &hml LSHFT S   &hml LCTRL T  &kp G              &kp M       &hmr RCTRL N  &hmr RSHFT E  &hmr LALT I   &hmr LGUI O    &kp SQT
            //├──────────────┼──────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                &caps_word      &kp Z          &kp X        &kp C          &kp D         &kp V              &kp K       &kp H         &kp COMMA     &kp DOT       &kp FSLH       &kp LGUI
            //╰──────────────┴──────────────┴─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                                             &lt FUN TAB  &ltsl NAV UML  &kp SPACE          &kp ENTER   &lt NUM BSPC  &lt SYM DEL
            //                                            ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯ 
            >;
            sensor-bindings = <&inc_dec_kp LEFT RIGHT>;
            label = "base"; 
        };

        qwertz_layer {
            bindings = <
            //╭──────────────┬──────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ 
            &mt LG(LA(K)) ESC   &kp Q          &kp W         &kp E         &kp R         &kp T            &kp Z          &kp U         &kp I         &kp O        &kp P         &kp BSPC
            //├──────────────┼──────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
            &kp TAB             &kp A          &hml LALT S   &hml LSHFT D  &hml LCTRL F  &kp G            &kp H          &hmr RCTRL J  &hmr RSHFT K  &hmr LALT L  &kp SEMI      &kp SQT
            //├──────────────┼──────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
            &sk LSHFT           &kp Y          &kp X         &kp C         &kp V         &kp B            &kp N          &kp M         &kp COMMA     &kp DOT      &kp FSLH      &kp LGUI
            //╰──────────────┴──────────────┴─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                                            &lt FUN TAB    &ltsl NAV UML &kp SPACE        &kp ENTER      &lt NUM BSPC  &lt SYM DEL
            //                                            ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯ 
            >;
            sensor-bindings = <&inc_dec_kp LEFT RIGHT>;
            label = "qwertz";
        };

        nav_layer {
            bindings = <
            //╭──────────────┬──────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
                &kp ESC         ___             ___         &ppt_fp        &kp LS(TAB)  &swapper          &kp LC(Y)     &kp LC(V)     &kp LC(C)     &kp LC(X)      &kp LC(Z)      ___
            //├──────────────┼──────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                &kp TAB         &kp LS(DEL)     &kp LALT    &kp LSHFT      &kp LCTRL    &kp LC(Z)       &kp PRINTSCREEN &kp LEFT      &kp DOWN      &kp UP         &kp RIGHT      ___
            //├──────────────┼──────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                &kp LSHFT       &kp LC(Z)       &kp LC(X)   &kp LC(C)   &kp PRINTSCREEN &kp LC(V)         &kp INS       &kp HOME      &kp PG_DN     &kp PG_UP      &kp END        ___
            //╰──────────────┴──────────────┴─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                                            ___            ___          ___               &kp RETURN    &kp DEL       ___
            //                                            ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯ 
            >;

            label = "navi";
        };

        symbol_layer {
            bindings = <
            //╭──────────────┬──────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
                &kp ESC       &kp KP_PLUS      &kp EXCL       &kp AT        &kp HASH      &kp GRAVE        &kp CARET    &kp AMPS    &kp KP_MULTIPLY  &kp LPAR       &kp RPAR    &kp BSPC
            //├──────────────┼──────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                &kp TAB       &kp KP_MINUS  &eur_dol EUR DLLR &kp PRCNT     &kp CARET     &kp TILDE        &kp MINUS    &kp EQUAL      &kp DQT        &kp SQT       &kp PIPE    &kp GRAVE
            //├──────────────┼──────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                &kp LSHFT     &kp KP_ASTERISK  &kp AMPS   &kp KP_MULTIPLY   &kp LPAR      &kp RPAR         &kp UNDER    &kp PLUS       &kp LBRC      &kp RBRC       &kp BSLH    &kp TILDE
            //╰──────────────┴──────────────┴─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                                              ___         &kp SPACE       ___              ___          ___            ___
            //                                            ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯ 
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
            label = "symbol";
        };

        num_layer {
            bindings = <
            //╭──────────────┬──────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
                &tog NUM      &kp KP_PLUS      &kp N1        &kp N2       &kp N3        &kp KP_DIVIDE       ___          ___            ___           ___           ___          ___
            //├──────────────┼──────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                oooo          &kp KP_MINUS     &kp N4        &kp N5       &kp N6        &kp DOT             ___         &kp RCTRL       &kp RSHFT     &kp RALT      &kp RGUI     ___
            //├──────────────┼──────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                oooo          &kp KP_ASTERISK  &kp N7        &kp N8       &kp N9        &kp COMMA           ___          ___            ___           ___           ___          ___
            //╰──────────────┴──────────────┴─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                                            &kp DELETE      &kp N0      &kp RETURN          ___         &tog NUM        ___
            //                                            ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯ 
            >;
            sensor-bindings = <&inc_dec_kp UP DOWN>;
            label = "num";
        };

        function_layer {
            bindings = <
            //╭──────────────┬──────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
                 ___          &bt BT_SEL 0   &out OUT_TOG   &kp C_PREV    &kp C_NEXT    &kp C_VOL_UP        &kp F1       &kp F2        &kp F3        &kp F4        &tog QWE      ___
            //├──────────────┼──────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                 ___          &bt BT_SEL 1      ___         &kp LSHFT     &kp C_PP      &kp C_VOL_DN        &kp F5       &kp F6        &kp F7        &kp F8        &tog NUM      ___
            //├──────────────┼──────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                 ___          &bt BT_SEL 2  &bt BT_CLR        ___         ___           &kp C_MUTE          &kp F9       &kp F10       &kp F11       &kp F12       ___           ___
            //╰──────────────┴──────────────┴─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                                              ___         ___           ___                 ___          ___           ___
            //                                            ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯ 
            >;
            
            label = "function";
        };

        umlaut_layer {
            bindings = <
            //╭──────────────┬──────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
                oooo            oooo            oooo        oooo            oooo         oooo               oooo         oooo          &de_ue         oooo          oooo        oooo
            //├──────────────┼──────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                oooo            &de_ae          oooo        &de_eszett      oooo         oooo               oooo         oooo          &euro_sign     oooo          &de_oe      oooo
            //├──────────────┼──────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                oooo            oooo            oooo        oooo            oooo         oooo               oooo         oooo          oooo           oooo          oooo        oooo
            //╰──────────────┴──────────────┴─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                                            oooo            oooo         oooo               oooo         oooo          oooo
            //                                            ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯ 
            >;

            label = "umlaut";
        };
    };
};
